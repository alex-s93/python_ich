# Дополнительное задание (по желанию) на регулярные выражения:
# Написать программу, которая сможет с помощью регулярного выражения указать, какие номера телефонов верны, а какие нет.
# Требования к валидному номеру телефона:
# 1. он может начинаться как со знаков +38 или 38, так и без них. Эти знаки могут быть как в скобках, так и без них.
# 2. далее может быть пробел или тире, или сразу следовать следующие цифры
# 3. затем следует номер оператора из трех цифр. Первая цифра обязательно «0», затем может быть одна из цифр 5, 6 или 9
# и затем может быть любая цифра. Таким образом, номером оператора может быть: 056, 096, 050, 067, 069, 098, 051, 063 и
# т.д.
# 4. далее может быть пробел или тире, или сразу следовать следующие цифры
# 5. затем идет 3 любые цифры
# 6. далее может быть пробел или тире, или сразу следовать следующие цифры
# 7. затем идет 2 любые цифры
# 8. далее может быть пробел или тире, или сразу следовать следующие цифры
# 9. затем идет 2 любые цифры
# После двух последних цифр не может быть никаких цифр или знаков. Если номер корректен, но кроме корректного номера
# идут ещё какие-то цифры или цифра – тогда весь этот номер не корректен (слишком много цифр в номере)
# Таким образом, в тестовом кортеже номеров:
# phone_numbers =('0964567654', '38 0976787654', '+380506780098', '096-456-76-54', '096 456 76 54', '(+38)0506780098',
# '44555', '196 4567654', '9964567654', '0864567654', '480976787654', '361976787654', '09645676544', '380976787654456',
# '+0964567654', '(+38)020-373-12-21', '(+37)0506780098')
# Первые 6 номеров являются валидными и ваш код должен для этих номеров выдать надпись, например:
# Номер "+38 0506780098" is correct
# Последние 11 номеров не валидны и ваш код должен для этих номеров выдать надпись, например:
# Номер "09645676544" не является корректным
# Вы можете в цикле перебирать номера и каждый номер проверять на валидность регулярным выражением.
# Допускается применение нескольких подряд регулярных выражений к номеру, но желательно проверку сделать в одном
# регулярном выражении.

import re


def validate_phone_numbers(numbers):
    pattern = re.compile(r"\A(?:\(\+?38\)|\+?38|)(?<!\+)[ \-]?(0[5679]\d)[ \-]?\d{3}[ \-]?\d{2}[ \-]?\d{2}\Z")

    for number in numbers:
        if not pattern.match(number):
            print("The phone number", number, "is not valid")
        else:
            print("The phone number", number, "is valid")


if __name__ == '__main__':
    phone_numbers = (
        '0964567654', '38 0976787654', '+380506780098', '096-456-76-54', '096 456 76 54', '(+38)0506780098',
        '44555', '196 4567654', '9964567654', '0864567654', '480976787654', '361976787654', '09645676544',
        '380976787654456', '+0964567654', '(+38)020-373-12-21', '(+37)0506780098')
    validate_phone_numbers(phone_numbers)